@model int
@{
    ViewBag.Title = "分楼宇面积比较";
    Layout = null;
}

<div class="box chart gradient">
    <div class="title">
        <h4>
            <span class="icon16 icomoon-icon-bars"></span><span>@ViewBag.Title</span>
        </h4>
        <a href="#" class="minimize">Minimize</a>
    </div>
    <div class="content">
        <div id="container-building-area" style="width: 100%; height:350px;">
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var dataList;
        var colors = Highcharts.getOptions().colors;

        $.getJSON('/Estate/BuildingGroup/BuildingTotalAreaCompareData', { id: '@Model' }, function (response) {
            dataList = response; 
            setColumnChart(response);
        });

        function setColumnChart(data) {
            var nameA = '建筑面积', nameB = '使用面积', nameC = '房间数量';
            var option = {
                chart: {
                    renderTo: 'container-building-area'                    
                },
                title: {
                    text: '分楼宇面积比较'
                },
                credits: {
                    enabled: false
                },
                xAxis: {
                    categories: []
                },
                yAxis: [{
                    min: 0,
                    labels: {
                        format: '{value}'
                    },
                    title: {
                        text: '面积 (m2)'
                    }
                }, { // Secondary yAxis
                    title: {
                        text: '房间数量',
                        style: {
                            color: '#4572A7'
                        }
                    },
                    labels: {
                        format: '{value}',
                        style: {
                            color: '#4572A7'
                        }
                    },
                    opposite: true
                }],
                plotOptions: {
                    column: {
                        cursor: 'pointer',                        
                        dataLabels: {
                            enabled: true,
                            color: colors[0],
                            style: {
                                fontWeight: 'bold'
                            },
                            formatter: function () {
                                return this.y.toFixed(2);
                            }
                        }
                    }
                },
                tooltip: {
                    /*formatter: function () {
                        var point = this.point;
                        s = this.x + ':<b>' + this.y + ' m<sup>2</sup></b><br/>';                       
                        return s;
                    }*/
                    shared: true
                },
                series: [{
                    name: nameB,
                    data: [],
                    type: 'column',
                    color: colors[3]
                }, {
                    name: nameC,
                    data: [],
                    yAxis: 1,
                    type: 'spline',
                    color: colors[4]
                }],
                exporting: {
                    enabled: true
                }
            };

            option.xAxis.categories = [];
            $.each(data, function (i, item) {
                option.xAxis.categories.push(item.BuildingName);
            });

            $.each(data, function (i, item) {                
                option.series[0].data.push({ name: item.BuildingName, y: parseFloat(item.UsableArea) });
                option.series[1].data.push({ name: item.BuildingName, y: parseInt(item.RoomCount) });
            });

            var chart1 = new Highcharts.Chart(option);
        };
    });
</script>